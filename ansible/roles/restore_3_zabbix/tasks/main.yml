---
# tasks file for restore_3_zabbix
- name: Stop and stop dependent containers
  community.docker.docker_compose_v2:
    project_src: "{{ OTUS_PROF_PROJECT_PATH }}"
    files: "{{ item.files }}"
    state: "{{ item.state }}"
  loop: "{{ dependent_containers }}"

- name: Удалить базу данных Zabbix из MySQL
  shell: >
    docker exec -it {{ MYSQL_DB1.CONTAINER_NAME_MYSQL_DB1 }} mysql -u{{ MYSQL_DB1.MYSQL_ROOT_USER_DB1 }} -p'{{ MYSQL_DB1.MYSQL_ROOT_PASSWORD_DB1 }}' -e "DROP DATABASE IF EXISTS {{ DATABASES.DB_Zabbix.DATABASE }};"

- name: Restore database Zabbix from backups
  ansible.builtin.shell: >
    docker exec -it {{ MYSQL_DB1.CONTAINER_NAME_MYSQL_DB1 }} mysql -u{{ MYSQL_DB1.MYSQL_ROOT_USER_DB1 }} -p'{{ MYSQL_DB1.MYSQL_ROOT_PASSWORD_DB1 }}' -e "CREATE DATABASE IF NOT EXISTS {{ DATABASES.DB_Zabbix.DATABASE }} CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;"

- name: Restore database Zabbix from backups
  ansible.builtin.shell: >
    docker exec -it {{ MYSQL_DB1.CONTAINER_NAME_MYSQL_DB1 }} mysql -u{{ MYSQL_DB1.MYSQL_ROOT_USER_DB1 }} -p'{{ MYSQL_DB1.MYSQL_ROOT_PASSWORD_DB1 }}' -e "CREATE USER IF NOT EXISTS '{{ DATABASES.DB_Zabbix.USER }}'@'%' IDENTIFIED BY '{{ DATABASES.DB_Zabbix.PASSWORD }}';"

- name: Restore database Zabbix from backups
  ansible.builtin.shell: >
    docker exec -it {{ MYSQL_DB1.CONTAINER_NAME_MYSQL_DB1 }} mysql -u{{ MYSQL_DB1.MYSQL_ROOT_USER_DB1 }} -p'{{ MYSQL_DB1.MYSQL_ROOT_PASSWORD_DB1 }}' -e "GRANT ALL PRIVILEGES ON {{ DATABASES.DB_Zabbix.DATABASE }}.* TO '{{ DATABASES.DB_Zabbix.USER }}'@'%';"

- name: Restore database Zabbix from backups
  ansible.builtin.shell: >
    docker exec -it {{ MYSQL_DB1.CONTAINER_NAME_MYSQL_DB1 }} mysql -u{{ MYSQL_DB1.MYSQL_ROOT_USER_DB1 }} -p'{{ MYSQL_DB1.MYSQL_ROOT_PASSWORD_DB1 }}' -e "FLUSH PRIVILEGES;"

- name: Restore database Zabbix from backups
  ansible.builtin.shell: >
    {{ OTUS_PROF_PROJECT_PATH }}/backups/databases/restore-{{ DATABASES.DB_Zabbix.DATABASE }}.sh
